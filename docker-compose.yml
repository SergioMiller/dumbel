version: '3'

services:
    nginx:
        container_name: dumbel-nginx
        build:
            context: .
            dockerfile: docker/nginx/Dockerfile
        restart: unless-stopped
        ports:
            - ${DOCKER_APP_PORT}:80
        working_dir: /var/www
        volumes:
            - ./public/:/var/www/public
        networks:
            - dumbel_network
        links:
            - app
        depends_on:
            - app

    app:
        container_name: dumbel-app
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        hostname: dumbel-php
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./app/:/var/www/app
            - ./bootstrap/:/var/www/bootstrap
            - ./config/:/var/www/config
            - ./database/:/var/www/database
            - ./lang/:/var/www/lang
            - ./public/:/var/www/public
            - ./resources/:/var/www/resources
            - ./routes/:/var/www/routes
            - ./storage/logs:/var/www/storage/logs
            - ./storage/operators.csv:/var/www/storage/operators.csv
            - ./storage/countries.csv:/var/www/storage/countries.csv
            - ./tests/:/var/www/tests
            #            - ./vendor/:/var/www/vendor
            - ./composer.json:/var/www/composer.json
            - ./composer.lock:/var/www/composer.lock
            - ./artisan:/var/www/artisan
            - ./.env:/var/www/.env
            - ./.php-cs-fixer.php:/var/www/.php-cs-fixer.php
            - ./phpunit.xml:/var/www/phpunit.xml
            - ./firebase.json:/var/www/firebase.json
        environment:
            - DB_HOST=${DB_HOST}
        depends_on:
            - redis
        links:
            - postgres
        networks:
            - dumbel_network

    queue:
        container_name: dumbel-queue
        build:
            context: .
            dockerfile: docker/queue/Dockerfile
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./app/:/var/www/app
            - ./bootstrap/:/var/www/bootstrap
            - ./config/:/var/www/config
            - ./database/:/var/www/database
            - ./lang/:/var/www/lang
            - ./public/:/var/www/public
            - ./resources/:/var/www/resources
            - ./routes/:/var/www/routes
            - ./storage/app:/var/www/storage/app
            - ./storage/logs:/var/www/storage/logs
            - ./tests/:/var/www/tests
            - ./vendor/:/var/www/vendor
            - ./composer.json:/var/www/composer.json
            - ./composer.lock:/var/www/composer.lock
            - ./artisan:/var/www/artisan
            - ./.env:/var/www/.env
            - ./.php-cs-fixer.php:/var/www/.php-cs-fixer.php
            - ./phpunit.xml:/var/www/phpunit.xml
            - ./firebase.json:/var/www/firebase.json
        environment:
            - DB_HOST=${DB_HOST}
        depends_on:
            - redis
        links:
            - postgres
        networks:
            - dumbel_network

    postgres:
        container_name: dumbel-postgres
        image: postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data:cached
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            PGDATA: /data/postgres
        ports:
            - ${DOCKER_POSTGRESS_PORT}:5432
        restart: unless-stopped
        networks:
            - dumbel_network

    redis:
        container_name: dumbel-redis
        image: redis:latest
        volumes:
            - ./docker/redis:/bitnami/redis/data
        environment:
            ALLOW_EMPTY_PASSWORD: 'yes'
        ports:
            - ${DOCKER_REDIS_PORT}:6379
        networks:
            - dumbel_network

#    node:
#        container_name: dumbel-node
#        image: node:18
#        restart: always
#        working_dir: /var/www
#        volumes:
#            - ./node_modules/:/var/www/node_modules
#            - ./public/:/var/www/public
#            - ./resources/css/:/var/www/resources/css
#            - ./resources/sass/:/var/www/resources/sass
#            - ./resources/js/:/var/www/resources/js
#            - ./package.json:/var/www/package.json
#            - ./package-lock.json:/var/www/package-lock.json
#            - ./vite.config.js:/var/www/vite.config.js
#        environment:
#            APP_URL: ${APP_URL}
#        ports:
#            - 8001:8001
#        command: sleep 10h

#    mysql:
#        image: mysql:8.0
#        environment:
#            MYSQL_DATABASE: 'app'
#            MYSQL_ROOT_PASSWORD: 'password'
#        ports:
#            - 8888:3306
#
#    phpmyadmin:
#        image: phpmyadmin/phpmyadmin
#        container_name: mmg-phpmyadmin
#        environment:
#            PMA_HOST: mysql
#            PMA_PORT: 3306
#        ports:
#            - 8080:80
#    elasticsearch:
#        build: ./docker/elasticsearch
#        restart: unless-stopped
#        volumes:
#            - ./docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#        ports:
#            - ${DOCKER_ELASTIC_PORT}:9200
#        environment:
#            ES_JAVA_OPTS: "-Xmx1g -Xms1g"
#            ELASTIC_PASSWORD: v4DDSaxzQoaV4pSvvHHZ
#            discovery.type: single-node
#        networks:
#            - dumbel_network
#
#    kibana:
#        build: ./docker/kibana
#        restart: unless-stopped
#        volumes:
#            - ./docker/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
#        ports:
#            - ${DOCKER_KIBANA_PORT}:5601
#        environment:
#            - ELASTICSEARCH_USERNAME=elastic
#            - ELASTICSEARCH_PASSWORD=v4DDSaxzQoaV4pSvvHHZ
#        networks:
#            - dumbel_network
#        depends_on:
#            - elasticsearch
#

volumes:
    postgres_data:
networks:
    dumbel_network:
        driver: bridge
        ipam:
            driver: default
            config:
                -   subnet: 192.168.5.0/24
